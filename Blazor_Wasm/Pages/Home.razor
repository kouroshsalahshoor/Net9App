@page "/"

<PageTitle>@_title</PageTitle>

<h3 class="m-3">@_title</h3>
@* <h3 class="bg-primary text-white text-center p-1">@_title</h3> *@
<hr />

<AuthorizeView>
    <Authorized>
        <p class="text-success">@context.User.Identity!.Name</p>
    </Authorized>
    <NotAuthorized>
        <p class="text-danger">Not Authorized</p>
    </NotAuthorized>
</AuthorizeView>

<div class="container">
    <div class="input-group mb-3">
        <input type="text" class="form-control" placeholder="search..." aria-label="Search" aria-describedby="button-addon2" @bind-value="@_search">
        <button class="btn btn-warning text-light" type="button" id="button-addon2" @onclick="search">Search</button>
    </div>
</div>

@if (_loading)
{
    <_Loading />
}
else
{
    if (_items is null || _items.Count() == 0)
    {
        <p>No items found</p>
    }
    else
    {
        <div class="container">
            <div class="row  py-3">
                @* @foreach (var category in _items.Select(x => x.Category!.Name).Distinct())
                {
                    <h2 class="text-success pl-1"><b>@category</b></h2>

                    @foreach (var product in _items.Where(x => x.Category!.Name == category))
                    {
                        <div class="card col-md-2 m-1">
                            <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text">@product.Description</p>
                                <a href="#" class="btn btn-primary">Details</a>
                            </div>
                        </div>
                    }
                } *@
            </div>
        </div>
    }
}

@code {
    private string _title = "Home";
    private bool _loading = false;

    private string _search = string.Empty;

    private IEnumerable<ProductDto>? _items = null;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        // _items = await _productService.Get();
        _loading = false;
    }

    private async Task search()
    {

    }
}