@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Blazor_Server</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <i class="bi-house-door-fill px-1"></i>
                Home
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="()=>expandSubNavPages = !expandSubNavPages">
                        @if (expandSubNavPages)
                        {
                            <i class="bi-dash-square-fill px-1"></i>
                        }
                        else
                        {
                            <i class="bi-plus-square-fill px-1"></i>
                        }
                        Pages
                    </NavLink>
                </div>
                @if (expandSubNavPages)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Products">
                            <i class="bi-list-nested px-3"></i>
                            Products
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Categories">
                            <i class="bi-list-nested px-3"></i>
                            Categories
                        </NavLink>
                    </div>

                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Employees">
                            <i class="bi-list-nested px-3"></i>
                            Employees
                        </NavLink>
                    </div>
                }

                <div class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="()=>expandSubNavDemos = !expandSubNavDemos">
                        @if (expandSubNavDemos)
                        {
                            <i class="bi-dash-square-fill px-1"></i>
                        }
                        else
                        {
                            <i class="bi-plus-square-fill px-1"></i>
                        }
                        Demos
                    </NavLink>
                </div>
                @if (expandSubNavDemos)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="swal">
                            <i class="bi-list-nested px-3"></i>
                            Sweet Alert
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="toastr">
                            <i class="bi-list-nested px-3"></i>
                            Toastr
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="confirmbox">
                            <i class="bi-list-nested px-3"></i>
                            Confirm Box
                        </NavLink>
                    </div>

                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="counter">
                            <i class="bi-list-nested px-3"></i>
                            Counter
                        </NavLink>
                    </div>

                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="weather">
                            <i class="bi-list-nested px-3"></i>
                            Weather
                        </NavLink>
                    </div>
                }

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="auth">
                        <i class="bi-lock px-1"></i>
                        Auth Required
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <i class="bi-person-fill px-1"></i>
                        @* <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> *@
                        @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <i class="bi-arrow-bar-left px-1"></i>
                            @* <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> *@
                            Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <i class="bi-person px-1"></i>
                        Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <i class="bi-person-badge px-1"></i>
                        Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;

    private bool expandSubNavPages;
    private bool expandSubNavDemos;

    protected override void OnInitialized()
    {
        currentUrl = _navigationManager.ToBaseRelativePath(_navigationManager.Uri);
        _navigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = _navigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        _navigationManager.LocationChanged -= OnLocationChanged;
    }
}

