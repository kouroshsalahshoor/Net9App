@page "/employee/detail/{Id}"

<section class="employee-detail">
    <h1 class="page-title">Details for @_model.FirstName @_model.LastName</h1>

    @{
        var leadingFormat = "00000";
        //var a = Employee.EmployeeId.ToString("00000");
    }


    <div class="col-12 row">
        <div class="col-md-2">
            <img src="@($"https://gillcleerenpluralsight.blob.core.windows.net/person/{_model.Id}.jpg")" class="img-responsive rounded-circle employee-detail-img" />
        </div>
        <div class="col-md-10 row">
            <div class="col-md-6">
                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Employee ID</label>
                    <div class="col-sm-8">
                        <label type="text" class="form-control-plaintext">@_model.Id.ToString(leadingFormat)</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">First name</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_model.FirstName</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Last name</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_model.LastName</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Birthdate</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_model.BirthDate.ToShortDateString()</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Email</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_model.Email</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Street</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_model.Street</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Zip</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_model.Zip</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">City</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_model.City</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Phone number</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_model.PhoneNumber</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Gender</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_model.Gender</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Smoker</label>
                    <div class="col-sm-8">

                        @if (_model.Smoker)
                        {
                            <label type="text" readonly class="form-control-plaintext">Yes</label>
                        }
                        else
                        {
                            <label type="text" readonly class="form-control-plaintext">No</label>

                        }
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Job category</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_jobCategory</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Joined us</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_model.JoinedDate?.ToShortDateString()</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Left us</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@_model.ExitDate?.ToShortDateString()</label>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="track-order-map" style="width:100%;height:100%;">
                    <_Map Zoom="10" Markers="_mapMarkers"></_Map>
                </div>
            </div>
        </div>
    </div>


</section>

@code {
    [Inject]
    public IEmployeeService _employeeService { get; set; } = default!;

    [Inject]
    public IJobCategoryService _jobCategoryService { get; set; } = default!;


    [Parameter]
    public string Id { get; set; } = default!;


    private List<Marker> _mapMarkers { get; set; } = new List<Marker>();

    private string _jobCategory = string.Empty;

    private Employee _model { get; set; } = new Employee();


    protected override async Task OnInitializedAsync()
    {
        _model = await _employeeService.Get(int.Parse(Id));

        _mapMarkers = new List<Marker>
            {
                new Marker{Description = $"{_model.FirstName} {_model.LastName}",  ShowPopup = false, X = _model.Longitude, Y = _model.Latitude}
            };
        _jobCategory = (await _jobCategoryService.Get(_model.JobCategoryId)).Name;
    }
}
